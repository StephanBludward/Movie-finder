{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"future_goals/","title":"Future Goals","text":"<p>I plan to expand this project by: - Adding more movies to the dataset - Implementing a machine learning model that learns user preferences over time - Adding user login and profile features - Deploying the app on a cloud service for easier access - Add links for streaming services for each movie  - Add describtions for movies - Add comments for movies so people could share what they think about a movie - Improve system of finding and recomedning movies by a single word or actors name</p>"},{"location":"how_it_works/","title":"How It Works","text":"<ol> <li>User Input: Enter a movie title on the home page.</li> <li>Search &amp; Match: The app searches for similar movies using Content-Based Filtering.</li> <li>Recommendations: The app returns the top 5 similar movies.</li> <li>Presentation: Results are displayed with a vintage design.</li> </ol>"},{"location":"how_it_works/#technical-details","title":"Technical Details:","text":"<ul> <li>Data Processing: Combines movie features (genre, plot, actors).</li> <li>Recommendation Algorithm: Uses Scikit-Learn\u2019s cosine similarity for comparisons.</li> </ul>"},{"location":"idea_and_planning/","title":"How I Came Up with the Idea","text":"<p>The idea was to create a practical demonstration of a recommendation engine. I wanted to find a simmilar movies to the one i liked and it inspired me to make this site/project. </p>"},{"location":"installation/","title":"Step-by-Step Installation Guide","text":""},{"location":"installation/#step-1-go-to-the-project-repository","title":"Step 1: Go to the Project Repository","text":"<ul> <li>Navigate to: https://github.com/stephanbludward/Movie-finder/</li> </ul>"},{"location":"installation/#step-2-download-the-zip-file","title":"Step 2: Download the ZIP File","text":"<ul> <li>Click on the green \"Code\" button.</li> <li>Select \"Download ZIP\".</li> </ul>"},{"location":"installation/#step-3-extract-the-zip-file","title":"Step 3: Extract the ZIP File","text":"<ul> <li>Locate the downloaded ZIP file (usually in your Downloads folder).</li> <li>Right-click on the ZIP file and choose \"Extract All...\" or \"Extract Here\" (depending on your operating system).</li> <li>Make sure to remember where you extracted the files so you can find them later.</li> </ul>"},{"location":"installation/#step-4-open-command-prompt-or-a-terminal","title":"Step 4: Open Command Prompt or a Terminal","text":"<ul> <li>Windows: Press <code>Windows + R</code>, type <code>cmd</code>, and press Enter.</li> <li>macOS/Linux: Open your terminal from the applications or press <code>Ctrl + Alt + T</code>.</li> </ul>"},{"location":"installation/#step-5-copy-the-path-to-the-folder-you-extracted","title":"Step 5: Copy the Path to the Folder You Extracted","text":"<ul> <li>Open the folder where you extracted the ZIP file.</li> <li>Windows: Click on the address bar and copy the full path.</li> <li>macOS/Linux: Right-click and choose \"Copy as Path\".</li> </ul>"},{"location":"installation/#step-6-change-directory-to-the-extracted-folder","title":"Step 6: Change Directory to the Extracted Folder","text":"<ul> <li> <p>In the Command Prompt or Terminal, type <code>cd</code> followed by a space, and paste the path you copied.</p> </li> <li> <p>Example:</p> </li> <li>cd C:\\Users\\YourName\\Downloads\\Movie-finder-main</li> </ul>"},{"location":"installation/#step-7-install-the-required-packages","title":"Step 7: Install the Required Packages","text":"<ul> <li>Paste the following command to install all the dependencies required for the project:</li> <li>pip install -r requirements.txt</li> </ul>"},{"location":"installation/#step-8-run-the-application","title":"Step 8: Run the Application","text":"<ul> <li>To start the application, paste the following command and press Enter:</li> <li>python app.py</li> </ul>"},{"location":"installation/#step-9-open-the-application-in-your-browser","title":"Step 9: Open the Application in Your Browser","text":"<ul> <li>Once the server is running, open your web browser and navigate to: http://127.0.0.1:5000</li> </ul>"},{"location":"purpose/","title":"Purpose","text":"<p>The project was created to demonstrate a simple movie recommendation system and help the humanity to get a needed movie. </p>"},{"location":"what_code_is_not/","title":"What the Code Is Not","text":"<p>The code is not: - A replacement for modern recommendation systems like Netflix's algorithm, but a simple example for demonstration.</p>"},{"location":"what_is_code/","title":"What Is the Code?","text":"<p>The code is a Flask-based web application that provides movie recommendations. Users can enter a movie title, and the app will suggest similar movies based on genre, plot, and other features using content-based filtering.</p>"},{"location":"what_is_code/#features","title":"Features:","text":"<ul> <li>Search for movies</li> <li>Get recommendations based on similar movies</li> <li>Vintage-themed design for a classic cinema feel</li> </ul>"},{"location":"who_created_code/","title":"Who Created the Code?","text":"<p>The Classic Movie Recommender project was primarily developed by our team, with assistance from the following: - OpenAI (ChatGPT): Some code snippets and explanations were provided by ChatGPT. - Existing Libraries: I utilized various Python libraries, such as Flask, Pandas, and Scikit-Learn, to handle web functionality, data processing, and recommendations.</p>"},{"location":"who_created_code/#contributions-from-others","title":"Contributions from Others","text":"<ul> <li>Open-source for CSS and Google Fonts for typography.</li> </ul>"}]}